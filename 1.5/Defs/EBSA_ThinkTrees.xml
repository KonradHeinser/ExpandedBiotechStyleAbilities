<?xml version="1.0" encoding="utf-8" ?>
<Defs>
    <!--Non-colonist trees-->
    <ThinkTreeDef>
        <defName>EBSGA_NonColonistHasNearbyEnemy</defName>
        <insertTag>EBSGAI_NonColonist_NearbyEnemy</insertTag>
        <insertPriority>100</insertPriority>
        <thinkRoot Class="ThinkNode_Priority">
            <subNodes>
                <li Class="ThinkNode_ConditionalHashIntervalTick"> <!--Sets up an interval to avoid quick succession casts, and to avoid casting things on the same pawn too often-->
                    <interval>25</interval> <!--Anything with 60 as a multiple would cause potential overuse-->
                    <li Class="ThinkNode_ConditionalHasAbility">
                        <ability>EBSA_BerserkNeedle</ability> <!--Forces a nearby target to go berserk-->
                        <subNodes>
                            <li Class="ThinkNode_ConditionalValidTargetForAbility">
                                <ability>EBSA_BerserkNeedle</ability>
                                <subnodes>
                                    <li Class="EBSGFramework.JobGiver_AICastAnyOfAbilityOnEnemyTarget">
                                        <abilities>
                                            <li>EBSA_BerserkNeedle</li>
                                        </abilities>
                                        <maxBodySize>99</maxBodySize>
                                    </li>
                                </subnodes>
                            </li>
                        </subNodes>
                    </li>
                    <li Class="ThinkNode_ConditionalHasAbility">
                        <ability>EBSA_DebilitatingNeedle</ability> <!--Forces a nearby target to go berserk-->
                        <subNodes>
                            <li Class="ThinkNode_ConditionalValidTargetForAbility">
                                <ability>EBSA_DebilitatingNeedle</ability>
                                <subnodes>
                                    <li Class="EBSGFramework.JobGiver_AICastAnyOfAbilityOnEnemyTarget">
                                        <abilities>
                                            <li>EBSA_DebilitatingNeedle</li>
                                        </abilities>
                                        <maxBodySize>99</maxBodySize>
                                    </li>
                                </subnodes>
                            </li>
                        </subNodes>
                    </li>
                    <subNodes>
                        <li Class="EBSGFramework.ThinkNode_ConditionalUsingRangedWeapon"> <!--Ensures this is a pawn with a melee attack-->
                            <invert>True</invert>
                            <subNodes>
                                <li Class="ThinkNode_ConditionalHasAbility">
                                    <ability>EBSA_SirenCall</ability> <!--Forces a nearby target to approach the pawn as long as they are not larger than a standard human. Larger targets may be too strong-->
                                    <subNodes>
                                        <li Class="ThinkNode_ConditionalValidTargetForAbility">
                                            <ability>EBSA_SirenCall</ability>
                                            <subnodes>
                                                <li Class="EBSGFramework.JobGiver_AICastAnyOfAbilityOnEnemyTarget">
                                                    <abilities>
                                                        <li>EBSA_SirenCall</li>
                                                    </abilities>
                                                </li>
                                            </subnodes>
                                        </li>
                                    </subNodes>
                                </li>
                            </subNodes>
                        </li>
                    </subNodes>
                </li>
            </subNodes>
        </thinkRoot>
    </ThinkTreeDef>

    <ThinkTreeDef>
        <defName>EBSGA_NonColonistReactToShot</defName>
        <insertTag>EBSGAI_NonColonist_ShotRecently</insertTag>
        <insertPriority>100</insertPriority>
        <thinkRoot Class="ThinkNode_Priority">
            <subNodes>
                <li Class="ThinkNode_ConditionalHasAbility">
                    <ability>EBSA_SmokeCloud</ability> <!--Creates a smoke cloud if the pawn has been shot in the past half hour-->
                    <subNodes>
                        <li Class="ThinkNode_ConditionalAbilityCastLastTick">
                            <ability>EBSA_SmokeCloud</ability>
                            <minTicksAgo>1200</minTicksAgo>
                            <subnodes>
                                <li Class="JobGiver_AICastAbilityOnSelf">
                                    <ability>EBSA_SmokeCloud</ability>
                                </li>
                            </subnodes>
                        </li>
                    </subNodes>
                </li>
            </subNodes>
        </thinkRoot>
    </ThinkTreeDef>

    <ThinkTreeDef>
        <defName>EBSGA_NonColonistReactToMelee</defName>
        <insertTag>EBSGAI_NonColonist_MeleeThreat</insertTag>
        <insertPriority>100</insertPriority>
        <thinkRoot Class="ThinkNode_Priority">
            <subNodes>
                <li Class="ThinkNode_ConditionalHashIntervalTick"> <!--Sets up an interval to avoid quick succession casts, and to avoid casting as soon as a single enemy is in range-->
                    <interval>60</interval>
                    <subnodes>
                        <li Class="ThinkNode_ConditionalHasAbility">
                            <ability>EBSA_StartlingScreech</ability> <!--Stun opponents when they're too close to escape-->
                            <subNodes>
                                <li Class="JobGiver_AICastAbilityOnSelf">
                                    <ability>EBSA_StartlingScreech</ability>
                                </li>
                            </subNodes>
                        </li>
                        <li Class="ThinkNode_ConditionalHasAbility">
                            <ability>EBSA_BlindingLuminescence</ability> <!--Blind opponents when they're too close to escape-->
                            <subNodes>
                                <li Class="JobGiver_AICastAbilityOnSelf">
                                    <ability>EBSA_BlindingLuminescence</ability>
                                </li>
                            </subNodes>
                        </li>
                        <li Class="ThinkNode_ConditionalHasAbility">
                            <ability>EBSA_DisorientingScreech</ability> <!--Disorient opponents when they're too close to escape-->
                            <subNodes>
                                <li Class="JobGiver_AICastAbilityOnSelf">
                                    <ability>EBSA_DisorientingScreech</ability>
                                </li>
                            </subNodes>
                        </li>
                    </subnodes>
                </li>
                <li Class="ThinkNode_ConditionalHasAbility"> <!--Escape if health is low and damage was taken recently-->
                    <ability>EBSA_Pounce</ability>
                    <subNodes>
                        <li Class="ThinkNode_ConditionalTotalDamage">
                            <thresholdPercent>0.5</thresholdPercent>
                            <subNodes>
                                <li Class="ThinkNode_HarmedRecently">
                                    <thresholdTicks>120</thresholdTicks>
                                    <subNodes>
                                        <li Class="JobGiver_AIJumpEscapeEnemies">
                                            <ability>EBSA_Pounce</ability>
                                        </li>
                                    </subNodes>
                                </li>
                            </subNodes>
                        </li>
                    </subNodes>
                </li>
            </subNodes>
        </thinkRoot>
    </ThinkTreeDef>
        
    <ThinkTreeDef>
        <defName>EBSGA_NonColonistReactToInjury</defName>
        <insertTag>EBSGAI_NonColonist_HarmedRecently</insertTag>
        <insertPriority>100</insertPriority>
        <thinkRoot Class="ThinkNode_Priority">
            <subNodes>
                <li Class="ThinkNode_ConditionalHasAbility"> <!--Turn invisible if damage recently to buy time for other stuff-->
                    <ability>EBSA_Chameleonlike</ability>
                    <subNodes>
                        <li Class="JobGiver_AICastAbilityOnSelf">
                            <ability>EBSA_Chameleonlike</ability>
                        </li>
                    </subNodes>
                </li>
                <li Class="ThinkNode_ConditionalHasAbility"> <!--If notable damage has been taken, stop the pain-->
                    <ability>EBSA_DeadenNerves</ability>
                    <subNodes>
                        <li Class="ThinkNode_ConditionalTotalDamage">
                            <thresholdPercent>0.25</thresholdPercent> 
                            <subNodes>
                                <li Class="JobGiver_AICastAbilityOnSelf">
                                    <ability>EBSA_DeadenNerves</ability>
                                </li>
                            </subNodes>
                        </li>
                    </subNodes>
                </li>
            </subNodes>
        </thinkRoot>
    </ThinkTreeDef>
    
</Defs>
